{
  "version": 3,
  "sources": ["../../datatables.net-buttons/js/dataTables.buttons.js"],
  "sourcesContent": ["/*! Buttons for DataTables 1.7.1\n * Â©2016-2021 SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n// Used for namespacing events added to the document by each instance, so they\n// can be removed on destroy\nvar _instCounter = 0;\n\n// Button namespacing counter for namespacing events on individual buttons\nvar _buttonCounter = 0;\n\nvar _dtButtons = DataTable.ext.buttons;\n\n// Allow for jQuery slim\nfunction _fadeIn(el, duration, fn) {\n\tif ($.fn.animate) {\n\t\tel\n\t\t\t.stop()\n\t\t\t.fadeIn( duration, fn );\n\t}\n\telse {\n\t\tel.css('display', 'block');\n\n\t\tif (fn) {\n\t\t\tfn.call(el);\n\t\t}\n\t}\n}\n\nfunction _fadeOut(el, duration, fn) {\n\tif ($.fn.animate) {\n\t\tel\n\t\t\t.stop()\n\t\t\t.fadeOut( duration, fn );\n\t}\n\telse {\n\t\tel.css('display', 'none');\n\t\t\n\t\tif (fn) {\n\t\t\tfn.call(el);\n\t\t}\n\t}\n}\n\n/**\n * [Buttons description]\n * @param {[type]}\n * @param {[type]}\n */\nvar Buttons = function( dt, config )\n{\n\t// If not created with a `new` keyword then we return a wrapper function that\n\t// will take the settings object for a DT. This allows easy use of new instances\n\t// with the `layout` option - e.g. `topLeft: $.fn.dataTable.Buttons( ... )`.\n\tif ( !(this instanceof Buttons) ) {\n\t\treturn function (settings) {\n\t\t\treturn new Buttons( settings, dt ).container();\n\t\t};\n\t}\n\n\t// If there is no config set it to an empty object\n\tif ( typeof( config ) === 'undefined' ) {\n\t\tconfig = {};\t\n\t}\n\t\n\t// Allow a boolean true for defaults\n\tif ( config === true ) {\n\t\tconfig = {};\n\t}\n\n\t// For easy configuration of buttons an array can be given\n\tif ( Array.isArray( config ) ) {\n\t\tconfig = { buttons: config };\n\t}\n\n\tthis.c = $.extend( true, {}, Buttons.defaults, config );\n\n\t// Don't want a deep copy for the buttons\n\tif ( config.buttons ) {\n\t\tthis.c.buttons = config.buttons;\n\t}\n\n\tthis.s = {\n\t\tdt: new DataTable.Api( dt ),\n\t\tbuttons: [],\n\t\tlistenKeys: '',\n\t\tnamespace: 'dtb'+(_instCounter++)\n\t};\n\n\tthis.dom = {\n\t\tcontainer: $('<'+this.c.dom.container.tag+'/>')\n\t\t\t.addClass( this.c.dom.container.className )\n\t};\n\n\tthis._constructor();\n};\n\n\n$.extend( Buttons.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Public methods\n\t */\n\n\t/**\n\t * Get the action of a button\n\t * @param  {int|string} Button index\n\t * @return {function}\n\t *//**\n\t * Set the action of a button\n\t * @param  {node} node Button element\n\t * @param  {function} action Function to set\n\t * @return {Buttons} Self for chaining\n\t */\n\taction: function ( node, action )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\n\t\tif ( action === undefined ) {\n\t\t\treturn button.conf.action;\n\t\t}\n\n\t\tbutton.conf.action = action;\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add an active class to the button to make to look active or get current\n\t * active state.\n\t * @param  {node} node Button element\n\t * @param  {boolean} [flag] Enable / disable flag\n\t * @return {Buttons} Self for chaining or boolean for getter\n\t */\n\tactive: function ( node, flag ) {\n\t\tvar button = this._nodeToButton( node );\n\t\tvar klass = this.c.dom.button.active;\n\t\tvar jqNode = $(button.node);\n\n\t\tif ( flag === undefined ) {\n\t\t\treturn jqNode.hasClass( klass );\n\t\t}\n\n\t\tjqNode.toggleClass( klass, flag === undefined ? true : flag );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add a new button\n\t * @param {object} config Button configuration object, base string name or function\n\t * @param {int|string} [idx] Button index for where to insert the button\n\t * @return {Buttons} Self for chaining\n\t */\n\tadd: function ( config, idx )\n\t{\n\t\tvar buttons = this.s.buttons;\n\n\t\tif ( typeof idx === 'string' ) {\n\t\t\tvar split = idx.split('-');\n\t\t\tvar base = this.s;\n\n\t\t\tfor ( var i=0, ien=split.length-1 ; i<ien ; i++ ) {\n\t\t\t\tbase = base.buttons[ split[i]*1 ];\n\t\t\t}\n\n\t\t\tbuttons = base.buttons;\n\t\t\tidx = split[ split.length-1 ]*1;\n\t\t}\n\n\t\tthis._expandButton( buttons, config, base !== undefined, idx );\n\t\tthis._draw();\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the container node for the buttons\n\t * @return {jQuery} Buttons node\n\t */\n\tcontainer: function ()\n\t{\n\t\treturn this.dom.container;\n\t},\n\n\t/**\n\t * Disable a button\n\t * @param  {node} node Button node\n\t * @return {Buttons} Self for chaining\n\t */\n\tdisable: function ( node ) {\n\t\tvar button = this._nodeToButton( node );\n\n\t\t$(button.node)\n\t\t\t.addClass( this.c.dom.button.disabled )\n\t\t\t.attr('disabled', true);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Destroy the instance, cleaning up event handlers and removing DOM\n\t * elements\n\t * @return {Buttons} Self for chaining\n\t */\n\tdestroy: function ()\n\t{\n\t\t// Key event listener\n\t\t$('body').off( 'keyup.'+this.s.namespace );\n\n\t\t// Individual button destroy (so they can remove their own events if\n\t\t// needed). Take a copy as the array is modified by `remove`\n\t\tvar buttons = this.s.buttons.slice();\n\t\tvar i, ien;\n\t\t\n\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tthis.remove( buttons[i].node );\n\t\t}\n\n\t\t// Container\n\t\tthis.dom.container.remove();\n\n\t\t// Remove from the settings object collection\n\t\tvar buttonInsts = this.s.dt.settings()[0];\n\n\t\tfor ( i=0, ien=buttonInsts.length ; i<ien ; i++ ) {\n\t\t\tif ( buttonInsts.inst === this ) {\n\t\t\t\tbuttonInsts.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Enable / disable a button\n\t * @param  {node} node Button node\n\t * @param  {boolean} [flag=true] Enable / disable flag\n\t * @return {Buttons} Self for chaining\n\t */\n\tenable: function ( node, flag )\n\t{\n\t\tif ( flag === false ) {\n\t\t\treturn this.disable( node );\n\t\t}\n\n\t\tvar button = this._nodeToButton( node );\n\t\t$(button.node)\n\t\t\t.removeClass( this.c.dom.button.disabled )\n\t\t\t.removeAttr('disabled');\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the instance name for the button set selector\n\t * @return {string} Instance name\n\t */\n\tname: function ()\n\t{\n\t\treturn this.c.name;\n\t},\n\n\t/**\n\t * Get a button's node of the buttons container if no button is given\n\t * @param  {node} [node] Button node\n\t * @return {jQuery} Button element, or container\n\t */\n\tnode: function ( node )\n\t{\n\t\tif ( ! node ) {\n\t\t\treturn this.dom.container;\n\t\t}\n\n\t\tvar button = this._nodeToButton( node );\n\t\treturn $(button.node);\n\t},\n\n\t/**\n\t * Set / get a processing class on the selected button\n\t * @param {element} node Triggering button node\n\t * @param  {boolean} flag true to add, false to remove, undefined to get\n\t * @return {boolean|Buttons} Getter value or this if a setter.\n\t */\n\tprocessing: function ( node, flag )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar button = this._nodeToButton( node );\n\n\t\tif ( flag === undefined ) {\n\t\t\treturn $(button.node).hasClass( 'processing' );\n\t\t}\n\n\t\t$(button.node).toggleClass( 'processing', flag );\n\n\t\t$(dt.table().node()).triggerHandler( 'buttons-processing.dt', [\n\t\t\tflag, dt.button( node ), dt, $(node), button.conf\n\t\t] );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Remove a button.\n\t * @param  {node} node Button node\n\t * @return {Buttons} Self for chaining\n\t */\n\tremove: function ( node )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\t\tvar host = this._nodeToHost( node );\n\t\tvar dt = this.s.dt;\n\n\t\t// Remove any child buttons first\n\t\tif ( button.buttons.length ) {\n\t\t\tfor ( var i=button.buttons.length-1 ; i>=0 ; i-- ) {\n\t\t\t\tthis.remove( button.buttons[i].node );\n\t\t\t}\n\t\t}\n\n\t\t// Allow the button to remove event handlers, etc\n\t\tif ( button.conf.destroy ) {\n\t\t\tbutton.conf.destroy.call( dt.button(node), dt, $(node), button.conf );\n\t\t}\n\n\t\tthis._removeKey( button.conf );\n\n\t\t$(button.node).remove();\n\n\t\tvar idx = $.inArray( button, host );\n\t\thost.splice( idx, 1 );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the text for a button\n\t * @param  {int|string} node Button index\n\t * @return {string} Button text\n\t *//**\n\t * Set the text for a button\n\t * @param  {int|string|function} node Button index\n\t * @param  {string} label Text\n\t * @return {Buttons} Self for chaining\n\t */\n\ttext: function ( node, label )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\t\tvar buttonLiner = this.c.dom.collection.buttonLiner;\n\t\tvar linerTag = button.inCollection && buttonLiner && buttonLiner.tag ?\n\t\t\tbuttonLiner.tag :\n\t\t\tthis.c.dom.buttonLiner.tag;\n\t\tvar dt = this.s.dt;\n\t\tvar jqNode = $(button.node);\n\t\tvar text = function ( opt ) {\n\t\t\treturn typeof opt === 'function' ?\n\t\t\t\topt( dt, jqNode, button.conf ) :\n\t\t\t\topt;\n\t\t};\n\n\t\tif ( label === undefined ) {\n\t\t\treturn text( button.conf.text );\n\t\t}\n\n\t\tbutton.conf.text = label;\n\n\t\tif ( linerTag ) {\n\t\t\tjqNode.children( linerTag ).html( text(label) );\n\t\t}\n\t\telse {\n\t\t\tjqNode.html( text(label) );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Buttons constructor\n\t * @private\n\t */\n\t_constructor: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtSettings = dt.settings()[0];\n\t\tvar buttons =  this.c.buttons;\n\n\t\tif ( ! dtSettings._buttons ) {\n\t\t\tdtSettings._buttons = [];\n\t\t}\n\n\t\tdtSettings._buttons.push( {\n\t\t\tinst: this,\n\t\t\tname: this.c.name\n\t\t} );\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tthis.add( buttons[i] );\n\t\t}\n\n\t\tdt.on( 'destroy', function ( e, settings ) {\n\t\t\tif ( settings === dtSettings ) {\n\t\t\t\tthat.destroy();\n\t\t\t}\n\t\t} );\n\n\t\t// Global key event binding to listen for button keys\n\t\t$('body').on( 'keyup.'+this.s.namespace, function ( e ) {\n\t\t\tif ( ! document.activeElement || document.activeElement === document.body ) {\n\t\t\t\t// SUse a string of characters for fast lookup of if we need to\n\t\t\t\t// handle this\n\t\t\t\tvar character = String.fromCharCode(e.keyCode).toLowerCase();\n\n\t\t\t\tif ( that.s.listenKeys.toLowerCase().indexOf( character ) !== -1 ) {\n\t\t\t\t\tthat._keypress( character, e );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Add a new button to the key press listener\n\t * @param {object} conf Resolved button configuration object\n\t * @private\n\t */\n\t_addKey: function ( conf )\n\t{\n\t\tif ( conf.key ) {\n\t\t\tthis.s.listenKeys += $.isPlainObject( conf.key ) ?\n\t\t\t\tconf.key.key :\n\t\t\t\tconf.key;\n\t\t}\n\t},\n\n\t/**\n\t * Insert the buttons into the container. Call without parameters!\n\t * @param  {node} [container] Recursive only - Insert point\n\t * @param  {array} [buttons] Recursive only - Buttons array\n\t * @private\n\t */\n\t_draw: function ( container, buttons )\n\t{\n\t\tif ( ! container ) {\n\t\t\tcontainer = this.dom.container;\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tcontainer.children().detach();\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tcontainer.append( buttons[i].inserter );\n\t\t\tcontainer.append( ' ' );\n\n\t\t\tif ( buttons[i].buttons && buttons[i].buttons.length ) {\n\t\t\t\tthis._draw( buttons[i].collection, buttons[i].buttons );\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Create buttons from an array of buttons\n\t * @param  {array} attachTo Buttons array to attach to\n\t * @param  {object} button Button definition\n\t * @param  {boolean} inCollection true if the button is in a collection\n\t * @private\n\t */\n\t_expandButton: function ( attachTo, button, inCollection, attachPoint )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar buttonCounter = 0;\n\t\tvar buttons = ! Array.isArray( button ) ?\n\t\t\t[ button ] :\n\t\t\tbutton;\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tvar conf = this._resolveExtends( buttons[i] );\n\n\t\t\tif ( ! conf ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If the configuration is an array, then expand the buttons at this\n\t\t\t// point\n\t\t\tif ( Array.isArray( conf ) ) {\n\t\t\t\tthis._expandButton( attachTo, conf, inCollection, attachPoint );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar built = this._buildButton( conf, inCollection );\n\t\t\tif ( ! built ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( attachPoint !== undefined && attachPoint !== null ) {\n\t\t\t\tattachTo.splice( attachPoint, 0, built );\n\t\t\t\tattachPoint++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattachTo.push( built );\n\t\t\t}\n\n\t\t\tif ( built.conf.buttons ) {\n\t\t\t\tbuilt.collection = $('<'+this.c.dom.collection.tag+'/>');\n\n\t\t\t\tbuilt.conf._collection = built.collection;\n\n\t\t\t\tthis._expandButton( built.buttons, built.conf.buttons, true, attachPoint );\n\t\t\t}\n\n\t\t\t// init call is made here, rather than buildButton as it needs to\n\t\t\t// be selectable, and for that it needs to be in the buttons array\n\t\t\tif ( conf.init ) {\n\t\t\t\tconf.init.call( dt.button( built.node ), dt, $(built.node), conf );\n\t\t\t}\n\n\t\t\tbuttonCounter++;\n\t\t}\n\t},\n\n\t/**\n\t * Create an individual button\n\t * @param  {object} config            Resolved button configuration\n\t * @param  {boolean} inCollection `true` if a collection button\n\t * @return {jQuery} Created button node (jQuery)\n\t * @private\n\t */\n\t_buildButton: function ( config, inCollection )\n\t{\n\t\tvar buttonDom = this.c.dom.button;\n\t\tvar linerDom = this.c.dom.buttonLiner;\n\t\tvar collectionDom = this.c.dom.collection;\n\t\tvar dt = this.s.dt;\n\t\tvar text = function ( opt ) {\n\t\t\treturn typeof opt === 'function' ?\n\t\t\t\topt( dt, button, config ) :\n\t\t\t\topt;\n\t\t};\n\n\t\tif ( inCollection && collectionDom.button ) {\n\t\t\tbuttonDom = collectionDom.button;\n\t\t}\n\n\t\tif ( inCollection && collectionDom.buttonLiner ) {\n\t\t\tlinerDom = collectionDom.buttonLiner;\n\t\t}\n\n\t\t// Make sure that the button is available based on whatever requirements\n\t\t// it has. For example, PDF button require pdfmake\n\t\tif ( config.available && ! config.available( dt, config ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar action = function ( e, dt, button, config ) {\n\t\t\tconfig.action.call( dt.button( button ), e, dt, button, config );\n\n\t\t\t$(dt.table().node()).triggerHandler( 'buttons-action.dt', [\n\t\t\t\tdt.button( button ), dt, button, config \n\t\t\t] );\n\t\t};\n\n\t\tvar tag = config.tag || buttonDom.tag;\n\t\tvar clickBlurs = config.clickBlurs === undefined ? true : config.clickBlurs\n\t\tvar button = $('<'+tag+'/>')\n\t\t\t.addClass( buttonDom.className )\n\t\t\t.attr( 'tabindex', this.s.dt.settings()[0].iTabIndex )\n\t\t\t.attr( 'aria-controls', this.s.dt.table().node().id )\n\t\t\t.on( 'click.dtb', function (e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tif ( ! button.hasClass( buttonDom.disabled ) && config.action ) {\n\t\t\t\t\taction( e, dt, button, config );\n\t\t\t\t}\n\t\t\t\tif( clickBlurs ) {\n\t\t\t\t\tbutton.trigger('blur');\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'keyup.dtb', function (e) {\n\t\t\t\tif ( e.keyCode === 13 ) {\n\t\t\t\t\tif ( ! button.hasClass( buttonDom.disabled ) && config.action ) {\n\t\t\t\t\t\taction( e, dt, button, config );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t// Make `a` tags act like a link\n\t\tif ( tag.toLowerCase() === 'a' ) {\n\t\t\tbutton.attr( 'href', '#' );\n\t\t}\n\n\t\t// Button tags should have `type=button` so they don't have any default behaviour\n\t\tif ( tag.toLowerCase() === 'button' ) {\n\t\t\tbutton.attr( 'type', 'button' );\n\t\t}\n\n\t\tif ( linerDom.tag ) {\n\t\t\tvar liner = $('<'+linerDom.tag+'/>')\n\t\t\t\t.html( text( config.text ) )\n\t\t\t\t.addClass( linerDom.className );\n\n\t\t\tif ( linerDom.tag.toLowerCase() === 'a' ) {\n\t\t\t\tliner.attr( 'href', '#' );\n\t\t\t}\n\n\t\t\tbutton.append( liner );\n\t\t}\n\t\telse {\n\t\t\tbutton.html( text( config.text ) );\n\t\t}\n\n\t\tif ( config.enabled === false ) {\n\t\t\tbutton.addClass( buttonDom.disabled );\n\t\t}\n\n\t\tif ( config.className ) {\n\t\t\tbutton.addClass( config.className );\n\t\t}\n\n\t\tif ( config.titleAttr ) {\n\t\t\tbutton.attr( 'title', text( config.titleAttr ) );\n\t\t}\n\n\t\tif ( config.attr ) {\n\t\t\tbutton.attr( config.attr );\n\t\t}\n\n\t\tif ( ! config.namespace ) {\n\t\t\tconfig.namespace = '.dt-button-'+(_buttonCounter++);\n\t\t}\n\n\t\tvar buttonContainer = this.c.dom.buttonContainer;\n\t\tvar inserter;\n\t\tif ( buttonContainer && buttonContainer.tag ) {\n\t\t\tinserter = $('<'+buttonContainer.tag+'/>')\n\t\t\t\t.addClass( buttonContainer.className )\n\t\t\t\t.append( button );\n\t\t}\n\t\telse {\n\t\t\tinserter = button;\n\t\t}\n\n\t\tthis._addKey( config );\n\n\t\t// Style integration callback for DOM manipulation\n\t\t// Note that this is _not_ documented. It is currently\n\t\t// for style integration only\n\t\tif( this.c.buttonCreated ) {\n\t\t\tinserter = this.c.buttonCreated( config, inserter );\n\t\t}\n\n\t\treturn {\n\t\t\tconf:         config,\n\t\t\tnode:         button.get(0),\n\t\t\tinserter:     inserter,\n\t\t\tbuttons:      [],\n\t\t\tinCollection: inCollection,\n\t\t\tcollection:   null\n\t\t};\n\t},\n\n\t/**\n\t * Get the button object from a node (recursive)\n\t * @param  {node} node Button node\n\t * @param  {array} [buttons] Button array, uses base if not defined\n\t * @return {object} Button object\n\t * @private\n\t */\n\t_nodeToButton: function ( node, buttons )\n\t{\n\t\tif ( ! buttons ) {\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tif ( buttons[i].node === node ) {\n\t\t\t\treturn buttons[i];\n\t\t\t}\n\n\t\t\tif ( buttons[i].buttons.length ) {\n\t\t\t\tvar ret = this._nodeToButton( node, buttons[i].buttons );\n\n\t\t\t\tif ( ret ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Get container array for a button from a button node (recursive)\n\t * @param  {node} node Button node\n\t * @param  {array} [buttons] Button array, uses base if not defined\n\t * @return {array} Button's host array\n\t * @private\n\t */\n\t_nodeToHost: function ( node, buttons )\n\t{\n\t\tif ( ! buttons ) {\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tif ( buttons[i].node === node ) {\n\t\t\t\treturn buttons;\n\t\t\t}\n\n\t\t\tif ( buttons[i].buttons.length ) {\n\t\t\t\tvar ret = this._nodeToHost( node, buttons[i].buttons );\n\n\t\t\t\tif ( ret ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Handle a key press - determine if any button's key configured matches\n\t * what was typed and trigger the action if so.\n\t * @param  {string} character The character pressed\n\t * @param  {object} e Key event that triggered this call\n\t * @private\n\t */\n\t_keypress: function ( character, e )\n\t{\n\t\t// Check if this button press already activated on another instance of Buttons\n\t\tif ( e._buttonsHandled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar run = function ( conf, node ) {\n\t\t\tif ( ! conf.key ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( conf.key === character ) {\n\t\t\t\te._buttonsHandled = true;\n\t\t\t\t$(node).click();\n\t\t\t}\n\t\t\telse if ( $.isPlainObject( conf.key ) ) {\n\t\t\t\tif ( conf.key.key !== character ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.shiftKey && ! e.shiftKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.altKey && ! e.altKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.ctrlKey && ! e.ctrlKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.metaKey && ! e.metaKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Made it this far - it is good\n\t\t\t\te._buttonsHandled = true;\n\t\t\t\t$(node).click();\n\t\t\t}\n\t\t};\n\n\t\tvar recurse = function ( a ) {\n\t\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\t\trun( a[i].conf, a[i].node );\n\n\t\t\t\tif ( a[i].buttons.length ) {\n\t\t\t\t\trecurse( a[i].buttons );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\trecurse( this.s.buttons );\n\t},\n\n\t/**\n\t * Remove a key from the key listener for this instance (to be used when a\n\t * button is removed)\n\t * @param  {object} conf Button configuration\n\t * @private\n\t */\n\t_removeKey: function ( conf )\n\t{\n\t\tif ( conf.key ) {\n\t\t\tvar character = $.isPlainObject( conf.key ) ?\n\t\t\t\tconf.key.key :\n\t\t\t\tconf.key;\n\n\t\t\t// Remove only one character, as multiple buttons could have the\n\t\t\t// same listening key\n\t\t\tvar a = this.s.listenKeys.split('');\n\t\t\tvar idx = $.inArray( character, a );\n\t\t\ta.splice( idx, 1 );\n\t\t\tthis.s.listenKeys = a.join('');\n\t\t}\n\t},\n\n\t/**\n\t * Resolve a button configuration\n\t * @param  {string|function|object} conf Button config to resolve\n\t * @return {object} Button configuration\n\t * @private\n\t */\n\t_resolveExtends: function ( conf )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar i, ien;\n\t\tvar toConfObject = function ( base ) {\n\t\t\tvar loop = 0;\n\n\t\t\t// Loop until we have resolved to a button configuration, or an\n\t\t\t// array of button configurations (which will be iterated\n\t\t\t// separately)\n\t\t\twhile ( ! $.isPlainObject(base) && ! Array.isArray(base) ) {\n\t\t\t\tif ( base === undefined ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( typeof base === 'function' ) {\n\t\t\t\t\tbase = base( dt, conf );\n\n\t\t\t\t\tif ( ! base ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( typeof base === 'string' ) {\n\t\t\t\t\tif ( ! _dtButtons[ base ] ) {\n\t\t\t\t\t\tthrow 'Unknown button type: '+base;\n\t\t\t\t\t}\n\n\t\t\t\t\tbase = _dtButtons[ base ];\n\t\t\t\t}\n\n\t\t\t\tloop++;\n\t\t\t\tif ( loop > 30 ) {\n\t\t\t\t\t// Protect against misconfiguration killing the browser\n\t\t\t\t\tthrow 'Buttons: Too many iterations';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Array.isArray( base ) ?\n\t\t\t\tbase :\n\t\t\t\t$.extend( {}, base );\n\t\t};\n\n\t\tconf = toConfObject( conf );\n\n\t\twhile ( conf && conf.extend ) {\n\t\t\t// Use `toConfObject` in case the button definition being extended\n\t\t\t// is itself a string or a function\n\t\t\tif ( ! _dtButtons[ conf.extend ] ) {\n\t\t\t\tthrow 'Cannot extend unknown button type: '+conf.extend;\n\t\t\t}\n\n\t\t\tvar objArray = toConfObject( _dtButtons[ conf.extend ] );\n\t\t\tif ( Array.isArray( objArray ) ) {\n\t\t\t\treturn objArray;\n\t\t\t}\n\t\t\telse if ( ! objArray ) {\n\t\t\t\t// This is a little brutal as it might be possible to have a\n\t\t\t\t// valid button without the extend, but if there is no extend\n\t\t\t\t// then the host button would be acting in an undefined state\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Stash the current class name\n\t\t\tvar originalClassName = objArray.className;\n\n\t\t\tconf = $.extend( {}, objArray, conf );\n\n\t\t\t// The extend will have overwritten the original class name if the\n\t\t\t// `conf` object also assigned a class, but we want to concatenate\n\t\t\t// them so they are list that is combined from all extended buttons\n\t\t\tif ( originalClassName && conf.className !== originalClassName ) {\n\t\t\t\tconf.className = originalClassName+' '+conf.className;\n\t\t\t}\n\n\t\t\t// Buttons to be added to a collection  -gives the ability to define\n\t\t\t// if buttons should be added to the start or end of a collection\n\t\t\tvar postfixButtons = conf.postfixButtons;\n\t\t\tif ( postfixButtons ) {\n\t\t\t\tif ( ! conf.buttons ) {\n\t\t\t\t\tconf.buttons = [];\n\t\t\t\t}\n\n\t\t\t\tfor ( i=0, ien=postfixButtons.length ; i<ien ; i++ ) {\n\t\t\t\t\tconf.buttons.push( postfixButtons[i] );\n\t\t\t\t}\n\n\t\t\t\tconf.postfixButtons = null;\n\t\t\t}\n\n\t\t\tvar prefixButtons = conf.prefixButtons;\n\t\t\tif ( prefixButtons ) {\n\t\t\t\tif ( ! conf.buttons ) {\n\t\t\t\t\tconf.buttons = [];\n\t\t\t\t}\n\n\t\t\t\tfor ( i=0, ien=prefixButtons.length ; i<ien ; i++ ) {\n\t\t\t\t\tconf.buttons.splice( i, 0, prefixButtons[i] );\n\t\t\t\t}\n\n\t\t\t\tconf.prefixButtons = null;\n\t\t\t}\n\n\t\t\t// Although we want the `conf` object to overwrite almost all of\n\t\t\t// the properties of the object being extended, the `extend`\n\t\t\t// property should come from the object being extended\n\t\t\tconf.extend = objArray.extend;\n\t\t}\n\n\t\treturn conf;\n\t},\n\n\t/**\n\t * Display (and replace if there is an existing one) a popover attached to a button\n\t * @param {string|node} content Content to show\n\t * @param {DataTable.Api} hostButton DT API instance of the button\n\t * @param {object} inOpts Options (see object below for all options)\n\t */\n\t_popover: function ( content, hostButton, inOpts ) {\n\t\tvar dt = hostButton;\n\t\tvar buttonsSettings = this.c;\n\t\tvar options = $.extend( {\n\t\t\talign: 'button-left', // button-right, dt-container\n\t\t\tautoClose: false,\n\t\t\tbackground: true,\n\t\t\tbackgroundClassName: 'dt-button-background',\n\t\t\tcontentClassName: buttonsSettings.dom.collection.className,\n\t\t\tcollectionLayout: '',\n\t\t\tcollectionTitle: '',\n\t\t\tdropup: false,\n\t\t\tfade: 400,\n\t\t\trightAlignClassName: 'dt-button-right',\n\t\t\ttag: buttonsSettings.dom.collection.tag\n\t\t}, inOpts );\n\t\tvar hostNode = hostButton.node();\n\n\t\tvar close = function () {\n\t\t\t_fadeOut(\n\t\t\t\t$('.dt-button-collection'),\n\t\t\t\toptions.fade,\n\t\t\t\tfunction () {\n\t\t\t\t\t$(this).detach();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t$(dt.buttons( '[aria-haspopup=\"true\"][aria-expanded=\"true\"]' ).nodes())\n\t\t\t\t.attr('aria-expanded', 'false');\n\n\t\t\t$('div.dt-button-background').off( 'click.dtb-collection' );\n\t\t\tButtons.background( false, options.backgroundClassName, options.fade, hostNode );\n\n\t\t\t$('body').off( '.dtb-collection' );\n\t\t\tdt.off( 'buttons-action.b-internal' );\n\t\t};\n\n\t\tif (content === false) {\n\t\t\tclose();\n\t\t}\n\n\t\tvar existingExpanded = $(dt.buttons( '[aria-haspopup=\"true\"][aria-expanded=\"true\"]' ).nodes());\n\t\tif ( existingExpanded.length ) {\n\t\t\thostNode = existingExpanded.eq(0);\n\n\t\t\tclose();\n\t\t}\n\n\t\tvar display = $('<div/>')\n\t\t\t.addClass('dt-button-collection')\n\t\t\t.addClass(options.collectionLayout)\n\t\t\t.css('display', 'none');\n\n\t\tcontent = $(content)\n\t\t\t.addClass(options.contentClassName)\n\t\t\t.attr('role', 'menu')\n\t\t\t.appendTo(display);\n\n\t\thostNode.attr( 'aria-expanded', 'true' );\n\n\t\tif ( hostNode.parents('body')[0] !== document.body ) {\n\t\t\thostNode = document.body.lastChild;\n\t\t}\n\n\t\tif ( options.collectionTitle ) {\n\t\t\tdisplay.prepend('<div class=\"dt-button-collection-title\">'+options.collectionTitle+'</div>');\n\t\t}\n\n\t\t_fadeIn( display.insertAfter( hostNode ), options.fade );\n\n\t\tvar tableContainer = $( hostButton.table().container() );\n\t\tvar position = display.css( 'position' );\n\n\t\tif ( options.align === 'dt-container' ) {\n\t\t\thostNode = hostNode.parent();\n\t\t\tdisplay.css('width', tableContainer.width());\n\t\t}\n\n\t\t// Align the popover relative to the DataTables container\n\t\t// Useful for wide popovers such as SearchPanes\n\t\tif (position === 'absolute') {\n\t\t\t// Align relative to the host button\n\t\t\tvar hostPosition = hostNode.position();\n\t\t\tvar buttonPosition = $(hostButton.node()).position();\n\n\t\t\tdisplay.css( {\n\t\t\t\ttop: buttonPosition.top + hostNode.outerHeight(),\n\t\t\t\tleft: hostPosition.left\n\t\t\t} );\n\n\t\t\t// calculate overflow when positioned beneath\n\t\t\tvar collectionHeight = display.outerHeight();\n\t\t\tvar tableBottom = tableContainer.offset().top + tableContainer.height();\n\t\t\tvar listBottom = buttonPosition.top + hostNode.outerHeight() + collectionHeight;\n\t\t\tvar bottomOverflow = listBottom - tableBottom;\n\n\t\t\t// calculate overflow when positioned above\n\t\t\tvar listTop = buttonPosition.top - collectionHeight;\n\t\t\tvar tableTop = tableContainer.offset().top;\n\t\t\tvar topOverflow = tableTop - listTop;\n\n\t\t\t// if bottom overflow is larger, move to the top because it fits better, or if dropup is requested\n\t\t\tvar moveTop = buttonPosition.top - collectionHeight - 5;\n\t\t\tif ( (bottomOverflow > topOverflow || options.dropup) && -moveTop < tableTop ) {\n\t\t\t\tdisplay.css( 'top', moveTop);\n\t\t\t}\n\n\t\t\t// Get the size of the container (left and width - and thus also right)\n\t\t\tvar tableLeft = tableContainer.offset().left;\n\t\t\tvar tableWidth = tableContainer.width();\n\t\t\tvar tableRight = tableLeft + tableWidth;\n\n\t\t\t// Get the size of the popover (left and width - and ...)\n\t\t\tvar popoverLeft = display.offset().left;\n\t\t\tvar popoverWidth = display.width();\n\t\t\tvar popoverRight = popoverLeft + popoverWidth;\n\n\t\t\t// Get the size of the host buttons (left and width - and ...)\n\t\t\tvar buttonsLeft = hostNode.offset().left;\n\t\t\tvar buttonsWidth = hostNode.outerWidth()\n\t\t\tvar buttonsRight = buttonsLeft + buttonsWidth;\n\n\t\t\tif (\n\t\t\t\tdisplay.hasClass( options.rightAlignClassName ) ||\n\t\t\t\tdisplay.hasClass( options.leftAlignClassName ) ||\n\t\t\t\toptions.align === 'dt-container'\n\t\t\t){\n\t\t\t\t// You've then got all the numbers you need to do some calculations and if statements,\n\t\t\t\t//  so we can do some quick JS maths and apply it only once\n\t\t\t\t// If it has the right align class OR the buttons are right aligned OR the button container is floated right,\n\t\t\t\t//  then calculate left position for the popover to align the popover to the right hand\n\t\t\t\t//  side of the button - check to see if the left of the popover is inside the table container.\n\t\t\t\t// If not, move the popover so it is, but not more than it means that the popover is to the right of the table container\n\t\t\t\tvar popoverShuffle = 0;\n\t\t\t\tif ( display.hasClass( options.rightAlignClassName )) {\n\t\t\t\t\tpopoverShuffle = buttonsRight - popoverRight;\n\t\t\t\t\tif(tableLeft > (popoverLeft + popoverShuffle)){\n\t\t\t\t\t\tvar leftGap = tableLeft - (popoverLeft + popoverShuffle);\n\t\t\t\t\t\tvar rightGap = tableRight - (popoverRight + popoverShuffle);\n\t\t\n\t\t\t\t\t\tif(leftGap > rightGap){\n\t\t\t\t\t\t\tpopoverShuffle += rightGap; \n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpopoverShuffle += leftGap;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// else attempt to left align the popover to the button. Similar to above, if the popover's right goes past the table container's right,\n\t\t\t\t//  then move it back, but not so much that it goes past the left of the table container\n\t\t\t\telse {\n\t\t\t\t\tpopoverShuffle = tableLeft - popoverLeft;\n\t\n\t\t\t\t\tif(tableRight < (popoverRight + popoverShuffle)){\n\t\t\t\t\t\tvar leftGap = tableLeft - (popoverLeft + popoverShuffle);\n\t\t\t\t\t\tvar rightGap = tableRight - (popoverRight + popoverShuffle);\n\t\n\t\t\t\t\t\tif(leftGap > rightGap ){\n\t\t\t\t\t\t\tpopoverShuffle += rightGap;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpopoverShuffle += leftGap;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tdisplay.css('left', display.position().left + popoverShuffle);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar top = hostNode.offset().top\n\t\t\t\tvar popoverShuffle = 0;\n\n\t\t\t\tpopoverShuffle = options.align === 'button-right'\n\t\t\t\t\t? buttonsRight - popoverRight\n\t\t\t\t\t: buttonsLeft - popoverLeft;\n\n\t\t\t\tdisplay.css('left', display.position().left + popoverShuffle);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\telse {\n\t\t\t// Fix position - centre on screen\n\t\t\tvar top = display.height() / 2;\n\t\t\tif ( top > $(window).height() / 2 ) {\n\t\t\t\ttop = $(window).height() / 2;\n\t\t\t}\n\n\t\t\tdisplay.css( 'marginTop', top*-1 );\n\t\t}\n\n\t\tif ( options.background ) {\n\t\t\tButtons.background( true, options.backgroundClassName, options.fade, hostNode );\n\t\t}\n\n\t\t// This is bonkers, but if we don't have a click listener on the\n\t\t// background element, iOS Safari will ignore the body click\n\t\t// listener below. An empty function here is all that is\n\t\t// required to make it work...\n\t\t$('div.dt-button-background').on( 'click.dtb-collection', function () {} );\n\n\t\t$('body')\n\t\t\t.on( 'click.dtb-collection', function (e) {\n\t\t\t\t// andSelf is deprecated in jQ1.8, but we want 1.7 compat\n\t\t\t\tvar back = $.fn.addBack ? 'addBack' : 'andSelf';\n\t\t\t\tvar parent = $(e.target).parent()[0];\n\n\t\t\t\tif (( ! $(e.target).parents()[back]().filter( content ).length  && !$(parent).hasClass('dt-buttons')) || $(e.target).hasClass('dt-button-background')) {\n\t\t\t\t\tclose();\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'keyup.dtb-collection', function (e) {\n\t\t\t\tif ( e.keyCode === 27 ) {\n\t\t\t\t\tclose();\n\t\t\t\t}\n\t\t\t} );\n\n\t\tif ( options.autoClose ) {\n\t\t\tsetTimeout( function () {\n\t\t\t\tdt.on( 'buttons-action.b-internal', function (e, btn, dt, node) {\n\t\t\t\t\tif ( node[0] === hostNode[0] ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tclose();\n\t\t\t\t} );\n\t\t\t}, 0);\n\t\t}\n\n\t\t$(display).trigger('buttons-popover.dt');\n\t}\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Statics\n */\n\n/**\n * Show / hide a background layer behind a collection\n * @param  {boolean} Flag to indicate if the background should be shown or\n *   hidden \n * @param  {string} Class to assign to the background\n * @static\n */\nButtons.background = function ( show, className, fade, insertPoint ) {\n\tif ( fade === undefined ) {\n\t\tfade = 400;\n\t}\n\tif ( ! insertPoint ) {\n\t\tinsertPoint = document.body;\n\t}\n\n\tif ( show ) {\n\t\t_fadeIn(\n\t\t\t$('<div/>')\n\t\t\t\t.addClass( className )\n\t\t\t\t.css( 'display', 'none' )\n\t\t\t\t.insertAfter( insertPoint ),\n\t\t\tfade\n\t\t);\n\t}\n\telse {\n\t\t_fadeOut(\n\t\t\t$('div.'+className),\n\t\t\tfade,\n\t\t\tfunction () {\n\t\t\t\t$(this)\n\t\t\t\t\t.removeClass( className )\n\t\t\t\t\t.remove();\n\t\t\t}\n\t\t);\n\t}\n};\n\n/**\n * Instance selector - select Buttons instances based on an instance selector\n * value from the buttons assigned to a DataTable. This is only useful if\n * multiple instances are attached to a DataTable.\n * @param  {string|int|array} Instance selector - see `instance-selector`\n *   documentation on the DataTables site\n * @param  {array} Button instance array that was attached to the DataTables\n *   settings object\n * @return {array} Buttons instances\n * @static\n */\nButtons.instanceSelector = function ( group, buttons )\n{\n\tif ( group === undefined || group === null ) {\n\t\treturn $.map( buttons, function ( v ) {\n\t\t\treturn v.inst;\n\t\t} );\n\t}\n\n\tvar ret = [];\n\tvar names = $.map( buttons, function ( v ) {\n\t\treturn v.name;\n\t} );\n\n\t// Flatten the group selector into an array of single options\n\tvar process = function ( input ) {\n\t\tif ( Array.isArray( input ) ) {\n\t\t\tfor ( var i=0, ien=input.length ; i<ien ; i++ ) {\n\t\t\t\tprocess( input[i] );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( typeof input === 'string' ) {\n\t\t\tif ( input.indexOf( ',' ) !== -1 ) {\n\t\t\t\t// String selector, list of names\n\t\t\t\tprocess( input.split(',') );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// String selector individual name\n\t\t\t\tvar idx = $.inArray( input.trim(), names );\n\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tret.push( buttons[ idx ].inst );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( typeof input === 'number' ) {\n\t\t\t// Index selector\n\t\t\tret.push( buttons[ input ].inst );\n\t\t}\n\t};\n\t\n\tprocess( group );\n\n\treturn ret;\n};\n\n/**\n * Button selector - select one or more buttons from a selector input so some\n * operation can be performed on them.\n * @param  {array} Button instances array that the selector should operate on\n * @param  {string|int|node|jQuery|array} Button selector - see\n *   `button-selector` documentation on the DataTables site\n * @return {array} Array of objects containing `inst` and `idx` properties of\n *   the selected buttons so you know which instance each button belongs to.\n * @static\n */\nButtons.buttonSelector = function ( insts, selector )\n{\n\tvar ret = [];\n\tvar nodeBuilder = function ( a, buttons, baseIdx ) {\n\t\tvar button;\n\t\tvar idx;\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tbutton = buttons[i];\n\n\t\t\tif ( button ) {\n\t\t\t\tidx = baseIdx !== undefined ?\n\t\t\t\t\tbaseIdx+i :\n\t\t\t\t\ti+'';\n\n\t\t\t\ta.push( {\n\t\t\t\t\tnode: button.node,\n\t\t\t\t\tname: button.conf.name,\n\t\t\t\t\tidx:  idx\n\t\t\t\t} );\n\n\t\t\t\tif ( button.buttons ) {\n\t\t\t\t\tnodeBuilder( a, button.buttons, idx+'-' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar run = function ( selector, inst ) {\n\t\tvar i, ien;\n\t\tvar buttons = [];\n\t\tnodeBuilder( buttons, inst.s.buttons );\n\n\t\tvar nodes = $.map( buttons, function (v) {\n\t\t\treturn v.node;\n\t\t} );\n\n\t\tif ( Array.isArray( selector ) || selector instanceof $ ) {\n\t\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t\trun( selector[i], inst );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( selector === null || selector === undefined || selector === '*' ) {\n\t\t\t// Select all\n\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: buttons[i].node\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( typeof selector === 'number' ) {\n\t\t\t// Main button index selector\n\t\t\tret.push( {\n\t\t\t\tinst: inst,\n\t\t\t\tnode: inst.s.buttons[ selector ].node\n\t\t\t} );\n\t\t}\n\t\telse if ( typeof selector === 'string' ) {\n\t\t\tif ( selector.indexOf( ',' ) !== -1 ) {\n\t\t\t\t// Split\n\t\t\t\tvar a = selector.split(',');\n\n\t\t\t\tfor ( i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\t\t\trun( a[i].trim(), inst );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( selector.match( /^\\d+(\\-\\d+)*$/ ) ) {\n\t\t\t\t// Sub-button index selector\n\t\t\t\tvar indexes = $.map( buttons, function (v) {\n\t\t\t\t\treturn v.idx;\n\t\t\t\t} );\n\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: buttons[ $.inArray( selector, indexes ) ].node\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse if ( selector.indexOf( ':name' ) !== -1 ) {\n\t\t\t\t// Button name selector\n\t\t\t\tvar name = selector.replace( ':name', '' );\n\n\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( buttons[i].name === name ) {\n\t\t\t\t\t\tret.push( {\n\t\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\t\tnode: buttons[i].node\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// jQuery selector on the nodes\n\t\t\t\t$( nodes ).filter( selector ).each( function () {\n\t\t\t\t\tret.push( {\n\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\tnode: this\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( typeof selector === 'object' && selector.nodeName ) {\n\t\t\t// Node selector\n\t\t\tvar idx = $.inArray( selector, nodes );\n\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: nodes[ idx ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t};\n\n\n\tfor ( var i=0, ien=insts.length ; i<ien ; i++ ) {\n\t\tvar inst = insts[i];\n\n\t\trun( selector, inst );\n\t}\n\n\treturn ret;\n};\n\n/**\n * Default function used for formatting output data.\n * @param {*} str Data to strip\n */\nButtons.stripData = function ( str, config ) {\n\tif ( typeof str !== 'string' ) {\n\t\treturn str;\n\t}\n\n\t// Always remove script tags\n\tstr = str.replace( /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '' );\n\n\t// Always remove comments\n\tstr = str.replace( /<!\\-\\-.*?\\-\\->/g, '' );\n\n\tif ( ! config || config.stripHtml ) {\n\t\tstr = str.replace( /<[^>]*>/g, '' );\n\t}\n\n\tif ( ! config || config.trim ) {\n\t\tstr = str.replace( /^\\s+|\\s+$/g, '' );\n\t}\n\n\tif ( ! config || config.stripNewlines ) {\n\t\tstr = str.replace( /\\n/g, ' ' );\n\t}\n\n\tif ( ! config || config.decodeEntities ) {\n\t\t_exportTextarea.innerHTML = str;\n\t\tstr = _exportTextarea.value;\n\t}\n\n\treturn str;\n};\n\n\n/**\n * Buttons defaults. For full documentation, please refer to the docs/option\n * directory or the DataTables site.\n * @type {Object}\n * @static\n */\nButtons.defaults = {\n\tbuttons: [ 'copy', 'excel', 'csv', 'pdf', 'print' ],\n\tname: 'main',\n\ttabIndex: 0,\n\tdom: {\n\t\tcontainer: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-buttons'\n\t\t},\n\t\tcollection: {\n\t\t\ttag: 'div',\n\t\t\tclassName: ''\n\t\t},\n\t\tbutton: {\n\t\t\ttag: 'button',\n\t\t\tclassName: 'dt-button',\n\t\t\tactive: 'active',\n\t\t\tdisabled: 'disabled'\n\t\t},\n\t\tbuttonLiner: {\n\t\t\ttag: 'span',\n\t\t\tclassName: ''\n\t\t}\n\t}\n};\n\n/**\n * Version information\n * @type {string}\n * @static\n */\nButtons.version = '1.7.1';\n\n\n$.extend( _dtButtons, {\n\tcollection: {\n\t\ttext: function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.collection', 'Collection' );\n\t\t},\n\t\tclassName: 'buttons-collection',\n\t\tinit: function ( dt, button, config ) {\n\t\t\tbutton.attr( 'aria-expanded', false );\n\t\t},\n\t\taction: function ( e, dt, button, config ) {\n\t\t\te.stopPropagation();\n\n\t\t\tif ( config._collection.parents('body').length ) {\n\t\t\t\tthis.popover(false, config);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.popover(config._collection, config);\n\t\t\t}\n\t\t},\n\t\tattr: {\n\t\t\t'aria-haspopup': true\n\t\t}\n\t\t// Also the popover options, defined in Buttons.popover\n\t},\n\tcopy: function ( dt, conf ) {\n\t\tif ( _dtButtons.copyHtml5 ) {\n\t\t\treturn 'copyHtml5';\n\t\t}\n\t},\n\tcsv: function ( dt, conf ) {\n\t\tif ( _dtButtons.csvHtml5 && _dtButtons.csvHtml5.available( dt, conf ) ) {\n\t\t\treturn 'csvHtml5';\n\t\t}\n\t},\n\texcel: function ( dt, conf ) {\n\t\tif ( _dtButtons.excelHtml5 && _dtButtons.excelHtml5.available( dt, conf ) ) {\n\t\t\treturn 'excelHtml5';\n\t\t}\n\t},\n\tpdf: function ( dt, conf ) {\n\t\tif ( _dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available( dt, conf ) ) {\n\t\t\treturn 'pdfHtml5';\n\t\t}\n\t},\n\tpageLength: function ( dt ) {\n\t\tvar lengthMenu = dt.settings()[0].aLengthMenu;\n\t\tvar vals = [];\n\t\tvar lang = [];\n\t\tvar text = function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.pageLength', {\n\t\t\t\t\"-1\": 'Show all rows',\n\t\t\t\t_:    'Show %d rows'\n\t\t\t}, dt.page.len() );\n\t\t};\n\n\t\t// Support for DataTables 1.x 2D array\n\t\tif (Array.isArray( lengthMenu[0] )) {\n\t\t\tvals = lengthMenu[0];\n\t\t\tlang = lengthMenu[1];\n\t\t}\n\t\telse {\n\t\t\tfor (var i=0 ; i<lengthMenu.length ; i++) {\n\t\t\t\tvar option = lengthMenu[i];\n\n\t\t\t\t// Support for DataTables 2 object in the array\n\t\t\t\tif ($.isPlainObject(option)) {\n\t\t\t\t\tvals.push(option.value);\n\t\t\t\t\tlang.push(option.label);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvals.push(option);\n\t\t\t\t\tlang.push(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\textend: 'collection',\n\t\t\ttext: text,\n\t\t\tclassName: 'buttons-page-length',\n\t\t\tautoClose: true,\n\t\t\tbuttons: $.map( vals, function ( val, i ) {\n\t\t\t\treturn {\n\t\t\t\t\ttext: lang[i],\n\t\t\t\t\tclassName: 'button-page-length',\n\t\t\t\t\taction: function ( e, dt ) {\n\t\t\t\t\t\tdt.page.len( val ).draw();\n\t\t\t\t\t},\n\t\t\t\t\tinit: function ( dt, node, conf ) {\n\t\t\t\t\t\tvar that = this;\n\t\t\t\t\t\tvar fn = function () {\n\t\t\t\t\t\t\tthat.active( dt.page.len() === val );\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tdt.on( 'length.dt'+conf.namespace, fn );\n\t\t\t\t\t\tfn();\n\t\t\t\t\t},\n\t\t\t\t\tdestroy: function ( dt, node, conf ) {\n\t\t\t\t\t\tdt.off( 'length.dt'+conf.namespace );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} ),\n\t\t\tinit: function ( dt, node, conf ) {\n\t\t\t\tvar that = this;\n\t\t\t\tdt.on( 'length.dt'+conf.namespace, function () {\n\t\t\t\t\tthat.text( conf.text );\n\t\t\t\t} );\n\t\t\t},\n\t\t\tdestroy: function ( dt, node, conf ) {\n\t\t\t\tdt.off( 'length.dt'+conf.namespace );\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Buttons group and individual button selector\nDataTable.Api.register( 'buttons()', function ( group, selector ) {\n\t// Argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = group;\n\t\tgroup = undefined;\n\t}\n\n\tthis.selector.buttonGroup = group;\n\n\tvar res = this.iterator( true, 'table', function ( ctx ) {\n\t\tif ( ctx._buttons ) {\n\t\t\treturn Buttons.buttonSelector(\n\t\t\t\tButtons.instanceSelector( group, ctx._buttons ),\n\t\t\t\tselector\n\t\t\t);\n\t\t}\n\t}, true );\n\n\tres._groupSelector = group;\n\treturn res;\n} );\n\n// Individual button selector\nDataTable.Api.register( 'button()', function ( group, selector ) {\n\t// just run buttons() and truncate\n\tvar buttons = this.buttons( group, selector );\n\n\tif ( buttons.length > 1 ) {\n\t\tbuttons.splice( 1, buttons.length );\n\t}\n\n\treturn buttons;\n} );\n\n// Active buttons\nDataTable.Api.registerPlural( 'buttons().active()', 'button().active()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.active( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.active( set.node, flag );\n\t} );\n} );\n\n// Get / set button action\nDataTable.Api.registerPlural( 'buttons().action()', 'button().action()', function ( action ) {\n\tif ( action === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.action( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.action( set.node, action );\n\t} );\n} );\n\n// Enable / disable buttons\nDataTable.Api.register( ['buttons().enable()', 'button().enable()'], function ( flag ) {\n\treturn this.each( function ( set ) {\n\t\tset.inst.enable( set.node, flag );\n\t} );\n} );\n\n// Disable buttons\nDataTable.Api.register( ['buttons().disable()', 'button().disable()'], function () {\n\treturn this.each( function ( set ) {\n\t\tset.inst.disable( set.node );\n\t} );\n} );\n\n// Get button nodes\nDataTable.Api.registerPlural( 'buttons().nodes()', 'button().node()', function () {\n\tvar jq = $();\n\n\t// jQuery will automatically reduce duplicates to a single entry\n\t$( this.each( function ( set ) {\n\t\tjq = jq.add( set.inst.node( set.node ) );\n\t} ) );\n\n\treturn jq;\n} );\n\n// Get / set button processing state\nDataTable.Api.registerPlural( 'buttons().processing()', 'button().processing()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.processing( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.processing( set.node, flag );\n\t} );\n} );\n\n// Get / set button text (i.e. the button labels)\nDataTable.Api.registerPlural( 'buttons().text()', 'button().text()', function ( label ) {\n\tif ( label === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.text( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.text( set.node, label );\n\t} );\n} );\n\n// Trigger a button's action\nDataTable.Api.registerPlural( 'buttons().trigger()', 'button().trigger()', function () {\n\treturn this.each( function ( set ) {\n\t\tset.inst.node( set.node ).trigger( 'click' );\n\t} );\n} );\n\n// Button resolver to the popover\nDataTable.Api.register( 'button().popover()', function (content, options) {\n\treturn this.map( function ( set ) {\n\t\treturn set.inst._popover( content, this.button(this[0].node), options );\n\t} );\n} );\n\n// Get the container elements\nDataTable.Api.register( 'buttons().containers()', function () {\n\tvar jq = $();\n\tvar groupSelector = this._groupSelector;\n\n\t// We need to use the group selector directly, since if there are no buttons\n\t// the result set will be empty\n\tthis.iterator( true, 'table', function ( ctx ) {\n\t\tif ( ctx._buttons ) {\n\t\t\tvar insts = Buttons.instanceSelector( groupSelector, ctx._buttons );\n\n\t\t\tfor ( var i=0, ien=insts.length ; i<ien ; i++ ) {\n\t\t\t\tjq = jq.add( insts[i].container() );\n\t\t\t}\n\t\t}\n\t} );\n\n\treturn jq;\n} );\n\nDataTable.Api.register( 'buttons().container()', function () {\n\t// API level of nesting is `buttons()` so we can zip into the containers method\n\treturn this.containers().eq(0);\n} );\n\n// Add a new button\nDataTable.Api.register( 'button().add()', function ( idx, conf ) {\n\tvar ctx = this.context;\n\n\t// Don't use `this` as it could be empty - select the instances directly\n\tif ( ctx.length ) {\n\t\tvar inst = Buttons.instanceSelector( this._groupSelector, ctx[0]._buttons );\n\n\t\tif ( inst.length ) {\n\t\t\tinst[0].add( conf, idx );\n\t\t}\n\t}\n\n\treturn this.button( this._groupSelector, idx );\n} );\n\n// Destroy the button sets selected\nDataTable.Api.register( 'buttons().destroy()', function () {\n\tthis.pluck( 'inst' ).unique().each( function ( inst ) {\n\t\tinst.destroy();\n\t} );\n\n\treturn this;\n} );\n\n// Remove a button\nDataTable.Api.registerPlural( 'buttons().remove()', 'buttons().remove()', function () {\n\tthis.each( function ( set ) {\n\t\tset.inst.remove( set.node );\n\t} );\n\n\treturn this;\n} );\n\n// Information box that can be used by buttons\nvar _infoTimer;\nDataTable.Api.register( 'buttons.info()', function ( title, message, time ) {\n\tvar that = this;\n\n\tif ( title === false ) {\n\t\tthis.off('destroy.btn-info');\n\t\t_fadeOut(\n\t\t\t$('#datatables_buttons_info'),\n\t\t\t400,\n\t\t\tfunction () {\n\t\t\t\t$(this).remove();\n\t\t\t}\n\t\t);\n\t\tclearTimeout( _infoTimer );\n\t\t_infoTimer = null;\n\n\t\treturn this;\n\t}\n\n\tif ( _infoTimer ) {\n\t\tclearTimeout( _infoTimer );\n\t}\n\n\tif ( $('#datatables_buttons_info').length ) {\n\t\t$('#datatables_buttons_info').remove();\n\t}\n\n\ttitle = title ? '<h2>'+title+'</h2>' : '';\n\n\t_fadeIn(\n\t\t$('<div id=\"datatables_buttons_info\" class=\"dt-button-info\"/>')\n\t\t\t.html( title )\n\t\t\t.append( $('<div/>')[ typeof message === 'string' ? 'html' : 'append' ]( message ) )\n\t\t\t.css( 'display', 'none' )\n\t\t\t.appendTo( 'body' )\n\t);\n\n\tif ( time !== undefined && time !== 0 ) {\n\t\t_infoTimer = setTimeout( function () {\n\t\t\tthat.buttons.info( false );\n\t\t}, time );\n\t}\n\n\tthis.on('destroy.btn-info', function () {\n\t\tthat.buttons.info(false);\n\t});\n\n\treturn this;\n} );\n\n// Get data from the table for export - this is common to a number of plug-in\n// buttons so it is included in the Buttons core library\nDataTable.Api.register( 'buttons.exportData()', function ( options ) {\n\tif ( this.context.length ) {\n\t\treturn _exportData( new DataTable.Api( this.context[0] ), options );\n\t}\n} );\n\n// Get information about the export that is common to many of the export data\n// types (DRY)\nDataTable.Api.register( 'buttons.exportInfo()', function ( conf ) {\n\tif ( ! conf ) {\n\t\tconf = {};\n\t}\n\n\treturn {\n\t\tfilename: _filename( conf ),\n\t\ttitle: _title( conf ),\n\t\tmessageTop: _message(this, conf.message || conf.messageTop, 'top'),\n\t\tmessageBottom: _message(this, conf.messageBottom, 'bottom')\n\t};\n} );\n\n\n\n/**\n * Get the file name for an exported file.\n *\n * @param {object}\tconfig Button configuration\n * @param {boolean} incExtension Include the file name extension\n */\nvar _filename = function ( config )\n{\n\t// Backwards compatibility\n\tvar filename = config.filename === '*' && config.title !== '*' && config.title !== undefined && config.title !== null && config.title !== '' ?\n\t\tconfig.title :\n\t\tconfig.filename;\n\n\tif ( typeof filename === 'function' ) {\n\t\tfilename = filename();\n\t}\n\n\tif ( filename === undefined || filename === null ) {\n\t\treturn null;\n\t}\n\n\tif ( filename.indexOf( '*' ) !== -1 ) {\n\t\tfilename = filename.replace( '*', $('head > title').text() ).trim();\n\t}\n\n\t// Strip characters which the OS will object to\n\tfilename = filename.replace(/[^a-zA-Z0-9_\\u00A1-\\uFFFF\\.,\\-_ !\\(\\)]/g, \"\");\n\n\tvar extension = _stringOrFunction( config.extension );\n\tif ( ! extension ) {\n\t\textension = '';\n\t}\n\n\treturn filename + extension;\n};\n\n/**\n * Simply utility method to allow parameters to be given as a function\n *\n * @param {undefined|string|function} option Option\n * @return {null|string} Resolved value\n */\nvar _stringOrFunction = function ( option )\n{\n\tif ( option === null || option === undefined ) {\n\t\treturn null;\n\t}\n\telse if ( typeof option === 'function' ) {\n\t\treturn option();\n\t}\n\treturn option;\n};\n\n/**\n * Get the title for an exported file.\n *\n * @param {object} config\tButton configuration\n */\nvar _title = function ( config )\n{\n\tvar title = _stringOrFunction( config.title );\n\n\treturn title === null ?\n\t\tnull : title.indexOf( '*' ) !== -1 ?\n\t\t\ttitle.replace( '*', $('head > title').text() || 'Exported data' ) :\n\t\t\ttitle;\n};\n\nvar _message = function ( dt, option, position )\n{\n\tvar message = _stringOrFunction( option );\n\tif ( message === null ) {\n\t\treturn null;\n\t}\n\n\tvar caption = $('caption', dt.table().container()).eq(0);\n\tif ( message === '*' ) {\n\t\tvar side = caption.css( 'caption-side' );\n\t\tif ( side !== position ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn caption.length ?\n\t\t\tcaption.text() :\n\t\t\t'';\n\t}\n\n\treturn message;\n};\n\n\n\n\nvar _exportTextarea = $('<textarea/>')[0];\nvar _exportData = function ( dt, inOpts )\n{\n\tvar config = $.extend( true, {}, {\n\t\trows:           null,\n\t\tcolumns:        '',\n\t\tmodifier:       {\n\t\t\tsearch: 'applied',\n\t\t\torder:  'applied'\n\t\t},\n\t\torthogonal:     'display',\n\t\tstripHtml:      true,\n\t\tstripNewlines:  true,\n\t\tdecodeEntities: true,\n\t\ttrim:           true,\n\t\tformat:         {\n\t\t\theader: function ( d ) {\n\t\t\t\treturn Buttons.stripData( d, config );\n\t\t\t},\n\t\t\tfooter: function ( d ) {\n\t\t\t\treturn Buttons.stripData( d, config );\n\t\t\t},\n\t\t\tbody: function ( d ) {\n\t\t\t\treturn Buttons.stripData( d, config );\n\t\t\t}\n\t\t},\n\t\tcustomizeData: null\n\t}, inOpts );\n\n\tvar header = dt.columns( config.columns ).indexes().map( function (idx) {\n\t\tvar el = dt.column( idx ).header();\n\t\treturn config.format.header( el.innerHTML, idx, el );\n\t} ).toArray();\n\n\tvar footer = dt.table().footer() ?\n\t\tdt.columns( config.columns ).indexes().map( function (idx) {\n\t\t\tvar el = dt.column( idx ).footer();\n\t\t\treturn config.format.footer( el ? el.innerHTML : '', idx, el );\n\t\t} ).toArray() :\n\t\tnull;\n\t\n\t// If Select is available on this table, and any rows are selected, limit the export\n\t// to the selected rows. If no rows are selected, all rows will be exported. Specify\n\t// a `selected` modifier to control directly.\n\tvar modifier = $.extend( {}, config.modifier );\n\tif ( dt.select && typeof dt.select.info === 'function' && modifier.selected === undefined ) {\n\t\tif ( dt.rows( config.rows, $.extend( { selected: true }, modifier ) ).any() ) {\n\t\t\t$.extend( modifier, { selected: true } )\n\t\t}\n\t}\n\n\tvar rowIndexes = dt.rows( config.rows, modifier ).indexes().toArray();\n\tvar selectedCells = dt.cells( rowIndexes, config.columns );\n\tvar cells = selectedCells\n\t\t.render( config.orthogonal )\n\t\t.toArray();\n\tvar cellNodes = selectedCells\n\t\t.nodes()\n\t\t.toArray();\n\n\tvar columns = header.length;\n\tvar rows = columns > 0 ? cells.length / columns : 0;\n\tvar body = [];\n\tvar cellCounter = 0;\n\n\tfor ( var i=0, ien=rows ; i<ien ; i++ ) {\n\t\tvar row = [ columns ];\n\n\t\tfor ( var j=0 ; j<columns ; j++ ) {\n\t\t\trow[j] = config.format.body( cells[ cellCounter ], i, j, cellNodes[ cellCounter ] );\n\t\t\tcellCounter++;\n\t\t}\n\n\t\tbody[i] = row;\n\t}\n\n\tvar data = {\n\t\theader: header,\n\t\tfooter: footer,\n\t\tbody:   body\n\t};\n\n\tif ( config.customizeData ) {\n\t\tconfig.customizeData( data );\n\t}\n\n\treturn data;\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables interface\n */\n\n// Attach to DataTables objects for global access\n$.fn.dataTable.Buttons = Buttons;\n$.fn.DataTable.Buttons = Buttons;\n\n\n\n// DataTables creation - check if the buttons have been defined for this table,\n// they will have been if the `B` option was used in `dom`, otherwise we should\n// create the buttons instance here so they can be inserted into the document\n// using the API. Listen for `init` for compatibility with pre 1.10.10, but to\n// be removed in future.\n$(document).on( 'init.dt plugin-init.dt', function (e, settings) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tvar opts = settings.oInit.buttons || DataTable.defaults.buttons;\n\n\tif ( opts && ! settings._buttons ) {\n\t\tnew Buttons( settings, opts ).container();\n\t}\n} );\n\nfunction _init ( settings, options ) {\n\tvar api = new DataTable.Api( settings );\n\tvar opts = options\n\t\t? options\n\t\t: api.init().buttons || DataTable.defaults.buttons;\n\n\treturn new Buttons( api, opts ).container();\n}\n\n// DataTables `dom` feature option\nDataTable.ext.feature.push( {\n\tfnInit: _init,\n\tcFeature: \"B\"\n} );\n\n// DataTables 2 layout feature\nif ( DataTable.ext.features ) {\n\tDataTable.ext.features.register( 'buttons', _init );\n}\n\n\nreturn Buttons;\n}));\n"],
  "mappings": "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",
  "names": ["window", "document", "dt", "button", "config", "i", "ien", "selector", "inst"]
}
